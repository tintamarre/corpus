version: '3'

services:
  nginx:
    image: nginx:1.17.9
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./src:/var/www:delegated
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:delegated
    depends_on:
      - php
      - mysql
    networks:
      - app-network

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: on-failure:3
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      - app-network

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - ./src:/var/www:delegated
    ports:
      - 9000:9000
    networks:
      - app-network

  redis:
    image: redis:4.0-alpine
    container_name: redis
    restart: on-failure:3
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    expose:
      - 6379
    volumes:
      - redisdata:/data
    networks:
      - app-network
    restart: on-failure:3


volumes:
  redisdata:
    driver: local
  mysqldata:
     driver: local

networks:
  app-network:
    driver: bridge
